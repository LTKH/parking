name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
      - name: Golang build
        run: GOARCH=amd64 GOOS=windows go build -o parking.exe parking.go
      - name: Archive Release
        uses: vimtor/action-zip@v1
        with:
          dest: parking-${{ github.ref }}_windows_amd64.zip
          files: parking.exe web parking.yml
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./parking-${{ github.ref }}_windows_amd64.zip
          asset_name: parking-${{ github.ref }}_windows_amd64.zip
          asset_content_type: application/zip

#  - name: upload windows artifact
#    uses: actions/upload-release-asset@v1
#    env:
#      GITHUB_TOKEN: ${{ github.token }}
#    with:
#      upload_url: ${{ steps.create_release.outputs.upload_url }}
#      asset_path: ./bin/azblogfilter.windows-amd64.zip
#      asset_name: azblogfilter.windows-amd64.zip
#      asset_content_type: application/zip

#jobs:
#  release:
#    runs-on: windows-2019
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Set up Go 1.19
#        uses: actions/setup-go@v3
#        with:
#          go-version: '1.19.2'
#      - name: Set up MinGW
#        uses: egor-tensin/setup-mingw@v2
#        with:
#          platform: x64
#      #- run: copy /Y libs\build\native\x64\WebView2Loader.dll WebView2Loader.dll
#      - run: go build -o /tmp/parking-windows-amd64.exe parking.go
      #- name: Create Release
      #  uses: actions/create-release@v0.0.6
      #  id: create_release
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    tag_name: ${{ github.ref }}
      #    release_name: Release ${{ github.ref }}
      #    draft: false
      #    prerelease: false
      #- name: Upload Release Assets
      #  uses: glentiki/xbin-release-action@v0.0.6
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }} 
      #    assets_path: ./build