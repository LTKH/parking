name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
      - name: GCC multilib
        run: |
          sudo apt-get install gcc-multilib g++-multilib gcc-mingw-w64 gcc-mingw-w64-i686 gcc-mingw-w64-x86-64 mingw-w64-common mingw-w64-i686-dev mingw-w64-x86-64-dev
      #- name: Parking build
      #  run: |
      #    GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc go build -o parking64.exe parking.go
      - name: Webview build
        run: |
          GOOS=windows GOARCH=386 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc go build -buildmode=c-shared -o webview.exe webview.go
      - name: Create zip archive
        run: |
          zip -r parking-${{ github.ref_name }}_windows_amd64.zip webview.exe web parking.yml install.cmd parking.url
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./parking-${{ github.ref_name }}_windows_amd64.zip
          asset_name: parking-${{ github.ref_name }}_windows_amd64.zip
          asset_content_type: application/zip

